#!/bin/bash

# this file must be executed to regenerate the README.md
# upon binary internal documentation updates
# it requires the binary to be up to date and compiled

UNAME=`uname`

# the command 
CMD=""
if [ "$(uname)" == "Linux" ]; 
then
	CMD=./bin/mm
else
	CMD=./bin/mm.exe
fi

if [ ! -f "$CMD" ]; then
    echo "Error: it requires the binary to be up to date and compiled"
	exit
fi

echo "File automatically generated by build-doc.sh and ${CMD}, do not edit manually." > README.md
echo "" >> README.md
echo "# Compilation" >> README.md
echo "" >> README.md
echo "Build software with following command:" >> README.md
echo "- ./build.sh [release|debug] [noomp] [nojobs]" >> README.md
echo "- release|debug: sets build target (release is default)" >> README.md
echo "- noomp: disables openmp build" >> README.md
echo "- nojobs: disables multi-processor build on unix (i.e. use -j 1) " >> README.md
echo "- output binary produced in bin folder." >> README.md
echo "" >> README.md
echo "Update readme with following command:" >> README.md
echo "- ./build.sh doc" >> README.md
echo "- output readme.md." >> README.md
echo "" >> README.md
echo "# Usage" >> README.md
echo "" >> README.md
echo "\`\`\`" >> README.md
${CMD} >> README.md
echo "\`\`\`" >> README.md
echo "" >> README.md
echo "\`\`\`" >> README.md
${CMD} sample >> README.md
echo "\`\`\`" >> README.md
echo "" >> README.md
echo "\`\`\`" >> README.md
${CMD} compare >> README.md
echo "\`\`\`" >> README.md
echo "" >> README.md
echo "\`\`\`" >> README.md
${CMD} quantize >> README.md
echo "\`\`\`" >> README.md
# homogeneize line endings
dos2unix README.md
#EOF